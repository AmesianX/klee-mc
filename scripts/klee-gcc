#!/usr/bin/env python

import os, sys, os.path

def isLinkCommand():
    # Look for '-Wl,' as a signal that we are calling the linker. What a hack.
    for arg in sys.argv:
        if arg.startswith('-Wl,') or arg == '-link':
            return True

def main():
    if not isLinkCommand():
        cArgs = []
        cArgs.append("-I"+os.path.normpath(sys.path[0]+"/../include"))

        idx = 0
        for arg in sys.argv:
            if arg == '-c' \
                     or (arg == '-o' and sys.argv[idx+1].endswith('.o')):
                cArgs.append("-emit-llvm")
                break
            idx += 1

        os.execvp("llvm-gcc", ["llvm-gcc"] + sys.argv[1:] + cArgs)
        return 1

    # Otherwise, strip out arguments that llvm-ld doesn't understand. I don't
    # want my previous explicit declaration of hackyness to imply that this bit
    # of code here is not also a complete and total hack, it is.
    args = sys.argv[1:]
    linkArgs = []
    for a in args:
        if a in ('-g', '-link', '-pthread', '-emit-llvm') \
             or a.startswith('-f') \
             or a.startswith('-W') \
             or a.startswith('-O') \
             or a.startswith('-D'):
            continue

        linkArgs.append(a)
    
    os.execvp("llvm-ld", ["llvm-ld", "--disable-opt"] + linkArgs)
    return 1

if __name__ == '__main__':
    main()

